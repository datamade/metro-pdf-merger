import sentry_sdk
from sentry_sdk.integrations.flask import FlaskIntegration
from sentry_sdk.integrations.logging import LoggingIntegration


DEBUG = True

# Reference for logging setup:
# https://github.com/getsentry/sentry-python/issues/228#issuecomment-480709424

SENTRY_DSN = ''

sentry_sdk.init(
    dsn=SENTRY_DSN,
    integrations=[
        LoggingIntegration(event_level=None, level=None),
        FlaskIntegration()
    ]
)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'all': {
            'format': '[%(asctime)s][%(levelname)s] '
                      '%(filename)s:line:%(lineno)d | %(message)s',
            'datefmt': "%B %d, %Y - %H:%M:%S",
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'all'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'all',
        },
        'sentry': {
            'level': 'WARNING',
            'class': 'sentry_sdk.integrations.logging.EventHandler',
        },
    },
    'loggers': {
        'tasks': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

if SENTRY_DSN:
    LOGGING['loggers']['tasks']['handlers'].append('sentry')

REDIS_QUEUE_KEY = 'metro_merger'
S3_BUCKET = 'datamade-metro-pdf-merger'
